mixin formField(title, forName, type, placeholder)
    span.form-row
        label.label-control(for=`${forName}`) #{title}
        input.form-control(type=`${type}` name=`${forName}` placeholder=`${placeholder}`)

//- will add more to story display once we have diversified profile photos and what not for each person
mixin storyDisplay(username, image, content)
    .container
        .story
            .user-column
                .user-picture
                    img#user-picture(src="p1.jpeg")
                .user-name #{username}
                .follow-state Follow
                .likes-counter 123
                .like-icon
                    i(class="fas fa-heart")
                .comment-icon
                    i.far.fa-comment
            .story-board
                .story-picture
                    img#story-picture(src=`${image}`)
                .content
                    .story-title STORIES:
                    .story-content #{content}
                    .comments
                        .comment-title COMMENTS:
                        .comment-user
                            .comment-user-picture
                                img#comment-user-picture(src="p1.jpeg")
                            #comment-user-name USER NAME
                        .comment-content Here is my take on the subject. It'll only work if the container has a specified size (max-width and max-height don't seem to get along with containers that don't have concrete size), but I wrote the CSS content in a way that allows it to be reused (add picture-frame class and px125 size class to your existing container).  Previous table-based image positioning had issues in Internet Explorer 11 (max-height doesn't work in display:table elements). I've replaced it with inline based positioning which not only


mixin buttons
    if locals.authenticated
        span.welcome-logout Welcome #{user.firstName}!
            form(action='/users/logout' method='post')
                button.btn.btn-primary(type='submit') Logout

    else
        span
            a.loginSign(href='/users/login') Login
            a.loginSign(href='/users/signup') Sign Up

